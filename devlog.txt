
Team GET
Eric L
Truc D
Gian T
pd <4>
---------------------
Do Ya Feel Lucky? The Terminal Casino Adventure

/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Built the first bot for blackjack (and make the bot winnier than people)! 
- Finished first complete game with all difficulties! 

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- LOW PRIORITY - If you enter more than one word for the name than it'll error and skip the amount of money being entered. Likely needs to be fix by checking the value entered. 
- MEDIUM PRIORITY - Implmenting the try/catch statements in the driver since if an invalid input is put in, it'll skip over the option and leave it as null. Tedious work for little results for now. 
- MEDIUM PRIORITY - Medium mode bugs out in blackjack. 
- HIGH PRIORITY - Game fails to terminate after hitting a negative amount, or above a million. 
- HIGH PRIORITY - Connect Slots subclasses to driver / figure out how to connect them. 
- MEDIUM PRIORITY - Allow player to play Dice and Slots more than once without having to retype selection and bet. 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- try/catch a Thread.sleep(long) allows for text to be printed at a timed manner. 

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Implemented the new interface "casinorules.java" to streamline connecting games with the driver. 
- Instead of poker which would take too long to perfect, I am coding war first. 
- Made Slots a super class instead of an abstract class or interface. 

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- ArrayList is far better than arrays! When in doubt use ArrayList. 
- For ArrayList don't create it as just ArrayList name, since it'll think each thing is an object. 
- You can have a local variable with the same name as your instance variables. Don't do that.
||||||||||||||||||||||||||||||||||||||||||

 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================
Summary from before: The framework for the driver file was created and it was linked with blackjack. Blackjack and slots were mostly seperate games that only supported easy mode.

2017-01-11
--------------------------------------------------------------
Eric :: Added thread.sleep and accompanying helper function for Woo.java. 
	Added instructions in driver file.
	Built the both the easy and difficult bot and tested them out. Bots win 90% more games.
	Recoded the win condition to allow for multiple winners and thus making winnings vary from (6X to 1X the bet).
	
Truc :: Finished up dice functionality and connected dice with the driver and interface.
	Set up Slots.
	Set up dice difficulty levels.
	
Gian :: Begin setting up cards for Bingo.
==============================================================

2017-01-12
--------------------------------------------------------------
Eric :: Completed the medium bot for blackjack. 
	Fixed resulting error from driver that would print “invalid input.”
	Added the ability to change your difficulty mid-game.	
	Fixed blackjack for easy mode.
	Completely finished blackjack. 
	Added war.java and completed 85%, only needs to add bot response and delayed print.
Truc :: Completed the Slots super class and connected it to the driver.
	Started writing the subclasses for Slots.
Gian ::
==============================================================

2017-01-13
--------------------------------------------------------------
Eric :: Added the instructions for Woo and allowed for win condition
	Allows for a cheat code in desperate times 
	Edited slots for some increased suspense and to print out the “process”
	Cleaned up blackjack, divides results better3	
Truc :: 
Gian ::
==============================================================

2017-01-15
--------------------------------------------------------------
Eric :: 
Truc :: Completed two subclasses of Slots with added features for increased possible winnings.
	Implemented all subclasses into Slots superclass linked to driver.
Gian ::
==============================================================

